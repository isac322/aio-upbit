[tool.poetry]
name = "aio-upbit"
version = "0.1.0"
description = "Upbit Client supports asyncio"
authors = ["Byeonghoon Yoo <bh322yoo@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["upbit", "client", "asyncio", "cryptocurrency"]
packages = [
    {include = "aioupbit"}
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Korean",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
aiohttp = { version = "^3.8.1", extras = ["speedups"] }
"backports.zoneinfo" = {version = "^0.2.1", python = "<3.9"}
typing-extensions = ">=3.8"
PyJWT = "^2.3.0"
python-rapidjson = "^1.5"

[tool.poetry.dev-dependencies]
mypy = "^0.981"
black = "^22.1.0"
pytest = "^7.0.0"
pytest-cov = "^3.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
skip-string-normalization = true


[tool.mypy]
python_version = '3.7'

allow_any_expr = true
allow_any_decorated = true
allow_any_explicit = true
disallow_any_generics = true
allow_subclassing_any = true

allow_redefinition = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
no_warn_no_return = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

# Output configuration
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true


[[tool.mypy.overrides]]
module = ['rapidjson.*']
ignore_missing_imports = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]